# Redirect www to non-www
server {
    listen 80;
    server_name ~^www\.(.+)$;
    return 301 $scheme://$1$request_uri;
}

# HTTPS redirect
server {
    listen 80 default_server;

    # Force HTTPS redirect
    if ($http_x_forwarded_proto != 'https') {
        rewrite ^ https://$host$request_uri? permanent;
    }

    root /container/application/public;
    index index.php;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Request size limits
    client_max_body_size 50M;
    client_body_buffer_size 1M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to Laravel sensitive directories and files
    location ~ ^/(storage|bootstrap|config|database|resources|routes|tests)/ {
        deny all;
        return 404;
    }

    # Block access to composer files
    location ~ ^/(composer\.(json|lock)|package\.json|yarn\.lock|\.env.*) {
        deny all;
        return 404;
    }

    # Handle Statamic Glide image generation
    location ^~ /img/ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Block common attack patterns
    location ~* (eval\(|base64_decode|gzinflate|file_get_contents|fopen|readfile) {
        deny all;
        return 403;
    }

    # Remove trailing slashes from URLs
    rewrite ^/(.*)/$ /$1 permanent;

    # Cache static assets with proper headers
    location ~* \.(gif|jpg|jpeg|png|ico|svg|webp|woff|woff2|ttf|otf|eot|pdf|zip|tar|bz2|rar|mp3|mp4|avi|mov|wmv|webm)$ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;

        # Security headers for static files
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
    }

    # Laravel authentication routes
    location ~* ^/(login|register|password|oauth).*$ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # API routes
    location ^~ /api/ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Admin routes
    location ^~ /admin/ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Main Laravel entry point
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP processing with HTTPS fix
    location ~ \.php$ {
        # Security check - only allow index.php
        if ($uri !~ "^/index\.php$") {
            return 404;
        }

        include fastcgi_params;

        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # HTTPS detection fix
        fastcgi_param HTTPS on;

        # Security parameters
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SERVER_PORT 80;

        # PHP security settings
        fastcgi_hide_header X-Powered-By;
        fastcgi_read_timeout 300;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;

        # Prevent execution of PHP files in uploads
        location ~* ^/storage/.*\.php$ {
            deny all;
            return 404;
        }
    }

    # Block execution of scripts in user upload areas
    location ~* ^/(storage|public/uploads)/.*\.(php|phtml|php3|php4|php5|pl|py|jsp|asp|sh|cgi)$ {
        deny all;
        return 403;
    }
}
